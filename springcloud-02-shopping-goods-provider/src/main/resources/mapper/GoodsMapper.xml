<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springcloud.dao.GoodsMapper">
	<resultMap id="BaseResultMap"
		type="com.springcloud.entity.Goods">
		<id column="goods_id" jdbcType="INTEGER" property="goodId" />
		<result column="goods_name" jdbcType="VARCHAR"
			property="goodName" />
		<result column="goods_prices" jdbcType="DOUBLE"
			property="goodPrice" />
		<result column="goods_discount" jdbcType="DOUBLE"
			property="goodDiscount" />
		<result column="goods_status" jdbcType="INTEGER"
			property="goodStatus" />
		<result column="goods_count" jdbcType="INTEGER"
			property="goodCount" />
		<result column="goods_is_new" jdbcType="INTEGER"
			property="goodIsNew" />
		<result column="goods_is_hot" jdbcType="INTEGER"
			property="goodIsHot" />
		<result column="goods_level" jdbcType="INTEGER"
			property="goodLevel" />
		<result column="goods_brief" jdbcType="VARCHAR"
			property="goodBrief" />
		<result column="goods_details" jdbcType="VARCHAR"
			property="goodDetails" />
		<result column="goods_photo" jdbcType="VARCHAR"
			property="goodPhoto" />
		<result column="class2_id" jdbcType="INTEGER"
			property="class2Id" />
		<result column="class1_id" jdbcType="INTEGER"
			property="class1Id" />
	</resultMap>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from goods
		where goods_id =
		#{goodId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.springcloud.entity.Goods">
		insert into goods (goods_name,
		goods_prices,
		goods_discount, goods_status, goods_count,
		goods_is_new,
		goods_is_hot, goods_level,
		goods_brief, goods_details, goods_photo,
		class2_id)
		values (#{goodName,jdbcType=VARCHAR},
		#{goodPrice,jdbcType=DOUBLE},
		#{goodDiscount,jdbcType=DOUBLE},
		#{goodStatus,jdbcType=INTEGER},
		#{goodCount,jdbcType=INTEGER},
		#{goodIsNew,jdbcType=INTEGER}, #{goodIsHot,jdbcType=INTEGER},
		#{goodLevel,jdbcType=INTEGER},
		#{goodBrief,jdbcType=VARCHAR},
		#{goodDetails,jdbcType=VARCHAR},
		#{goodPhoto,jdbcType=VARCHAR},
		#{class2Id,jdbcType=INTEGER})
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="com.springcloud.entity.Goods">
		update goods
		set goods_name =
		#{goodName,jdbcType=VARCHAR},
		goods_prices =
		#{goodPrice,jdbcType=DOUBLE},
		goods_discount =
		#{goodDiscount,jdbcType=DOUBLE},
		goods_count =
		#{goodCount,jdbcType=INTEGER},
		goods_level =
		#{goodLevel,jdbcType=INTEGER},
		goods_brief =
		#{goodBrief,jdbcType=VARCHAR},
		goods_details =
		#{goodDetails,jdbcType=VARCHAR},
		class2_id =
		#{class2Id,jdbcType=INTEGER}
		where goods_id =
		#{goodId,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select goods_id,
		goods_name, goods_prices, goods_discount, goods_status,
		goods_count,
		goods_is_new,
		goods_is_hot, goods_level, goods_brief, goods_details,
		goods_photo, class2_id
		from goods
		where goods_id =
		#{goodId,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select goods_id, goods_name,
		goods_prices, goods_discount, goods_status,
		goods_count, goods_is_new,
		goods_is_hot, goods_level, goods_brief, goods_details, goods_photo,
		class2_id
		from goods
	</select>
	<!-- 查询GOODS表中满足条件的商品信息 id对应GoodsMapper中的方法名 -->
	<select id="select" parameterType="com.springcloud.entity.Goods"
		resultMap="BaseResultMap">
		select g.goods_id, g.goods_name, g.goods_prices, g.goods_discount,
		g.goods_status, g.goods_count, g.goods_is_new,
		g.goods_is_hot,
		g.goods_level, g.goods_brief, g.goods_details, g.goods_photo,
		c2.class2_id,c1.class1_id
		from class1 c1 join class2 c2 on
		c1.class1_id=c2.class1_id
		join goods g on g.class2_id=c2.class2_id
		<!-- 当第一个条件前面为and或or时，使用where替换条件中的and或or -->
		<trim prefix="where" prefixOverrides="and|or">
			<if test="goodName!='%%' and goodName!='%null%'">
				g.goods_name like #{goodName}
			</if>
			<if test="goodPriceMin!=null and goodPriceMax!=null">
				and g.goods_prices between #{goodPriceMin} and
				#{goodPriceMax}
			</if>
			<if test="class1Id!=-1">
				and c1.class1_id=#{class1Id}
			</if>
			<if test="class2Id!=-1">
				and c2.class2_id=#{class2Id}
			</if>
		</trim>
	</select>

	<!-- 根据条件修改Goods表中指定ID的商品信息 -->
	<update id="updateGoodsById"
		parameterType="com.springcloud.entity.Goods">
		update goods set
		<if test="goodIsHot!=null">
			goods_is_hot=#{goodIsHot}
		</if>
		<if test="goodIsNew!=null">
			goods_is_new=#{goodIsNew}
		</if>
		<if test="goodStatus!=null">
			goods_status=#{goodStatus}
		</if>
		<if test="goodPhoto!=null">
			goods_photo=#{goodPhoto}
		</if>
		where goods_id=#{goodId}
	</update>

	<!-- 查询销量前10的商品信息 -->
	<select id="selectGroup" resultMap="goodsGroupMap">
		select g.goods_name,sum(o.transaction_count) as goods_sum
		from goods g join order_detail o on g.goods_id = o.goods_id
		group by g.goods_name
		order by 2 desc
		limit 0,10
	</select>

	<resultMap type="com.springcloud.entity.Goods"
		id="goodsGroupMap">
		<result column="goods_name" property="goodName" />
		<result column="goods_sum" property="goodsSum" />
	</resultMap>

</mapper>